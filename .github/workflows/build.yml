---
name: Build

# Controls when the workflow will run
'on':
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: 'coglinev3.veracrypt'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'coglinev3.veracrypt'

      - name: Run ansible-lint
        uses: ansible-actions/ansible-lint-action@v1.0.2
        with:
          target: "./"
          required_collections: 'community.general'

      #- name: Install test dependencies.
      #  run: python3 -m pip install --upgrade --user pytest ansible yamllint ansible-lint

      #- name: Lint code with yamllint.
      #  run: yamllint .

      #- name: Lint code with ansible-lint.
      #  run: ansible-lint

  test:
    name: Molecule
    runs-on: ubuntu-latest
    env:
      MOLECULE_DISTRO: 'coglinev3/ansible'
    strategy:
      matrix:
        include:
          #- distro_version: 'alpine-3.16'
          #- distro_version: 'alpine-3.17'
          - distro_version: 'centos-7'
          - distro_version: 'almalinux-8'
          - distro_version: 'almalinux-9'
          - distro_version: 'debian-10'
          - distro_version: 'debian-11'
          - distro_version: 'fedora-35'
          - distro_version: 'fedora-36'
          - distro_version: 'fedora-37'
          - distro_version: 'fedora-38'
          - distro_version: 'fedora-39'
          #- distro_version: 'ubuntu-18.04'
          - distro_version: 'ubuntu-20.04'
          - distro_version: 'ubuntu-22.04'

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'coglinev3.veracrypt'

      - name: Install Molecule
        run: >-
          python3 -m pip install --user urllib3
          ansible
          molecule
          molecule-plugins[docker]

      - name: Configure Ansible
        run: |
          mkdir -p ~/.ansible
          cp .github/ansible.cfg ~/.ansible.cfg
          cp .github/hosts ~/.ansible/hosts

      - name: Show Ansible and Molecule version
        run: |
          ansible --version
          molecule --version

      - name: Run tests.
        run: molecule test --all
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO_VERSION: ${{ matrix.distro_version }}
          MOLECULE_DISTRO_CMD: ${{ matrix.distro_cmd }}

  # Push Ansible role to Ansible Galaxy
  release:
    name: Release
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: 'Release on galaxy'
        uses: ansible-actions/ansible-galaxy-action@v1.2.0
        with:
          galaxy_api_key: ${{ secrets.galaxy_api_key }}
